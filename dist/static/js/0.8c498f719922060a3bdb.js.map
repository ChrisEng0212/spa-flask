{"version":3,"sources":["webpack:///src/components/Toolbar.vue","webpack:///./src/components/Toolbar.vue?d474","webpack:///./src/components/Toolbar.vue"],"names":["Toolbar","name","props","toolbarShow","Boolean","showAnswers","testType","String","data","wordsReset","words","choices","retry","testItemsRoot","amendedList","selected","toolbarSettings","optionsA","value","text","optionsG","optionsR","label","labelOptions","sort","sortOptions","sound","soundOptions","spelling","optionsO","special","optionsS","display","displayOptions","feedback","feedbackOptions","methods","makeTest","this","vocabList","JSON","parse","stringItems","item","transScore","push","_item","Category","_item2","Gr","_item3","_item4","English","includes","length","makeSpelling","makeChoices","i","randomItem","Math","floor","random","checkDuplicate","Chinese","sdEn","mp3en","sdCh","mp3ch","j","typoFix","randomChoice","shuffChoices","shuffle","Choices","console","log","type","$emit","test","settings","stringify_default","parseInt","spell","Object","utils","Spelling","english","split","newString","index","retryTest","alphabet","letter","rand","testEntry","testItems","array","_ref","goTo","arg","$router","watch","alert","created","tableItems","$store","getters","makeList","pop","components_Toolbar","render","_vm","_h","$createElement","_c","_self","_e","staticClass","attrs","cols","for","_v","_s","id","min","max","step","variant","model","callback","$$v","expression","inline","options","md","buttons","button-variant","size","lg","select-size","block","on","click","$event","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/0.8c498f719922060a3bdb.js","sourcesContent":["<template>\n  <div class=\"toolbar\" v-if=\"!toolbarShow\">\n    <div>\n      <b-card>\n        <b-row>\n          <b-col cols=\"8\">\n              <label for=\"range-words\">Quiz Words: {{ words }} </label>\n              <b-form-input id=\"range-words\" v-model=\"words\" type=\"range\" min=\"6\" max=\"30\" step=2 variant=\"warning\"></b-form-input>\n          </b-col>\n        </b-row>\n\n        <b-row class=\"mt-2\" v-if=\"testType === 'TransEng' || testType === 'TransCh'\">\n          <b-col>\n            <label for=\"range-chocies\">Answers Choices: </label>\n            <br>\n            <b-form-spinbutton inline id=\"range-chocies\" v-model=\"choices\" type=\"range\" min=\"2\" max=\"6\"></b-form-spinbutton>\n          </b-col>\n        </b-row>\n\n        <b-row class=\"mt-2\" v-if=\"testType === 'TypeTest'\">\n          <b-col >\n            Spelling Options\n          <b-form-select v-model=\"spelling\" :options=\"optionsO\"></b-form-select>\n          </b-col>\n\n          <b-col>\n            Sort Options\n          <b-form-select v-model=\"special\" :options=\"optionsS\"></b-form-select>\n          </b-col>\n        </b-row>\n\n        <b-row>\n          <b-col md=\"4\" class=\"my-2\" v-if=\"testType === 'TypeTest'\">\n            Display Options\n            <div>\n              <b-form-radio-group\n              v-model=\"display\"\n              :options=\"displayOptions\"\n              buttons\n              button-variant=\"outline-primary\"\n              size=\"sm\"\n            ></b-form-radio-group>\n            </div>\n          </b-col>\n\n          <b-col md=\"4\" class=\"my-2\" v-if=\"testType === 'TypeTest'\">\n            Feedback Options\n            <div>\n              <b-form-radio-group\n              v-model=\"feedback\"\n              :options=\"feedbackOptions\"\n              buttons\n              button-variant=\"outline-primary\"\n              size=\"sm\"\n            ></b-form-radio-group>\n            </div>\n          </b-col>\n\n          <b-col lg=\"4\" class=\"mt-4\">\n            Sound Options\n            <div>\n              <b-form-radio-group\n                v-model=\"sound\"\n                :options=\"soundOptions\"\n                buttons\n                button-variant=\"custom\"\n                size=\"sm\"\n              ></b-form-radio-group>\n            </div>\n          </b-col>\n        </b-row>\n\n        <b-row v-if=\"testType === 'TransEng' || testType === 'TransCh'\">\n          <b-col>\n          <br>\n            Grammar Labels\n            <div>\n              <b-form-radio-group\n                  v-model=\"label\"\n                  :options=\"labelOptions\"\n                  buttons\n                  button-variant=\"outline-primary\"\n                  size=\"sm\"\n                ></b-form-radio-group>\n            </div>\n          </b-col>\n        </b-row>\n\n        <b-row v-if=\"testType === 'TransEng' || testType === 'TransCh'\">\n          <b-col>\n            <br>\n            Sort Options\n            <div>\n              <b-form-radio-group\n                v-model=\"sort\"\n                :options=\"sortOptions\"\n                buttons\n                button-variant=\"outline-primary\"\n                size=\"sm\"\n              ></b-form-radio-group>\n            </div>\n          </b-col>\n        </b-row>\n\n        <br>\n        <b-row>\n          <b-col v-if=\"sort=='srtLet'\">\n            <b-form-select v-model=\"selected\" :options=\"optionsA\" :select-size=\"4\"></b-form-select>\n            <div class=\"mt-3\">Selected: <strong>{{ selected }}</strong></div>\n          </b-col>\n          <b-col v-if=\"sort=='srtGram'\">\n            <b-form-select v-model=\"selected\" :options=\"optionsG\"></b-form-select>\n            <div class=\"mt-3\">Selected: <strong>{{ selected }}</strong></div>\n          </b-col>\n          <b-col v-if=\"sort=='srtDiff'\">\n            <b-form-select v-model=\"selected\" :options=\"optionsR\"></b-form-select>\n            <div class=\"mt-3\">Selected: <strong>{{ selected }}</strong></div>\n          </b-col>\n        </b-row>\n      </b-card>\n\n      <b-card class=\"mt-2\">\n        <b-row>\n          <b-col>\n            <b-button variant=\"outline-primary\" block class=\"md-3\" @click=\"makeTest()\">Start</b-button>\n          </b-col>\n          <b-col>\n            <b-button v-if=\"showAnswers\" variant=\"outline-success\" block class=\"md-3\" @click=\"retryTest()\">Retry</b-button>\n          </b-col>\n        </b-row>\n      </b-card>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { getTypos, wordFix } from '@/utils'\n\nexport default {\n  name: 'Toolbar',\n  props: {\n    toolbarShow: Boolean,\n    showAnswers: Boolean,\n    testType: String\n  },\n  data () {\n    return {\n      wordsReset: '6',\n      words: 6,\n      choices: 4,\n      retry: false,\n      testItemsRoot: [],\n      amendedList: [],\n      selected: null,\n      toolbarSettings: {},\n      optionsA: [{ value: null, text: '---' }],\n      optionsG: [\n        { value: null, text: '---' },\n        { value: 'v.', text: 'verbs' },\n        { value: 'adj.', text: 'adjectives' },\n        { value: 'n.', text: 'nouns' },\n        { value: 'phr.', text: 'phrases' },\n        { value: 'abbr.', text: 'abbreviations' },\n        { value: 'prop.', text: 'proper nouns' }\n      ],\n      optionsR: [\n        { value: null, text: '---' },\n        { value: 0, text: 'neutral score' },\n        { value: 1, text: 'easier words' },\n        { value: -1, text: 'harder words' }\n      ],\n      label: 'lbAn',\n      labelOptions: [\n        { text: 'answer', value: 'lbAn' },\n        { text: 'question', value: 'lbQu' },\n        { text: 'all off', value: 'lbOff' },\n        { text: 'all on', value: 'lbOn' }\n      ],\n      sort: 'srtNone',\n      sortOptions: [\n        { text: 'no sorting', value: 'srtNone' },\n        { text: 'difficulty', value: 'srtDiff' },\n        { text: 'grammar', value: 'srtGram' },\n        { text: 'letter', value: 'srtLet' }\n      ],\n      sound: 'sdEx',\n      soundOptions: [\n        { text: 'exam mode', value: 'sdEx' },\n        { text: 'automatic', value: 'sdOn' },\n        { text: 'off', value: 'sdOff' }\n      ],\n      spelling: null,\n      optionsO: [\n        { value: null, text: '---' },\n        { value: 'const', text: 'show vowels' },\n        { value: 'vowels', text: 'show consonents' },\n        { value: 'blanks', text: 'show blanks' },\n        { value: 'all', text: 'show all' },\n        { value: 'showFL', text: 'show words' },\n        { value: 'typos', text: 'typos' },\n        { value: 'scramble', text: 'scramble letter' }\n      ],\n      special: null,\n      optionsS: [\n        { value: null, text: '---' },\n        { value: 'punc', text: 'punctuation' },\n        { value: 'phr.', text: 'phrases' },\n        { value: 'abbr.', text: 'abbreviations' },\n        { value: 'prop.', text: 'proper nouns' }\n      ],\n      display: 'ch_text_On',\n      displayOptions: [\n        { text: 'Chinese', value: 'ch_text_On' },\n        { text: 'Label', value: 'ch_lb_On' },\n        { text: 'None', value: 'ch_lb_Off' }\n      ],\n      feedback: 'fbConst',\n      feedbackOptions: [\n        { text: 'Constant', value: 'fbConst' },\n        { text: 'Complete', value: 'fbComp' },\n        { text: 'None', value: 'fbNone' }\n      ]\n    }\n  },\n  methods: {\n    makeTest: function () {\n      // reset variables\n      // console.log('make test', this.sort)\n      this.testItemsRoot = []\n\n      // prepare amended list\n      let vocabList = JSON.parse(this.stringItems)\n      this.amendedList = []\n\n      if (this.sort === 'srtNone' && this.special === null) {\n        this.amendedList = vocabList\n      } else if (this.sort === 'srtDiff') {\n        for (let item in vocabList) {\n          if (this.selected === 0 && vocabList[item].transScore === 0) {\n            this.amendedList.push(vocabList[item])\n          }\n          if (this.selected === 0 && vocabList[item].transScore === null) {\n            this.amendedList.push(vocabList[item])\n          }\n          if (this.selected === -1 && vocabList[item].transScore <= -1) {\n            this.amendedList.push(vocabList[item])\n          }\n          if (this.selected === 1 && vocabList[item].transScore >= 1) {\n            this.amendedList.push(vocabList[item])\n          }\n        }\n      } else if (this.sort === 'srtLet') {\n        for (let item in vocabList) {\n          if (vocabList[item].Category === this.selected) {\n            this.amendedList.push(vocabList[item])\n          }\n        }\n      } else if (this.sort === 'srtGram') {\n        for (let item in vocabList) {\n          if (vocabList[item].Gr === this.selected) {\n            this.amendedList.push(vocabList[item])\n          }\n        }\n      } else if (this.special === 'phr.' || this.special === 'abbr.' || this.special === 'prop.') {\n        for (let item in vocabList) {\n          if (vocabList[item].Gr === this.special) {\n            this.amendedList.push(vocabList[item])\n          }\n        }\n      } else if (this.special === 'punc') {\n        for (let item in vocabList) {\n          if (vocabList[item].English.includes('-') ||\n              vocabList[item].English.includes(\"'\") ||\n              vocabList[item].English.includes('&') ||\n              vocabList[item].English.includes('.')) {\n            this.amendedList.push(vocabList[item])\n          }\n        }\n      }\n\n      // check there are enought words available\n      if (this.amendedList.length < this.words) {\n        this.words = this.amendedList.length\n        // console.log('few words', this.amendedList)\n      }\n\n      if (this.testType === 'TypeTest') {\n        this.makeSpelling()\n      } else {\n        this.makeChoices()\n      }\n    },\n    makeChoices: function () {\n      let i = 0\n      while (i < this.words) {\n        var randomItem = this.amendedList[Math.floor(Math.random() * this.amendedList.length)]\n        // console.log(this.testItems, randomItem)\n        if (!this.checkDuplicate(randomItem)) {\n          console.log('pass', randomItem)\n        } else {\n          let choices = [{\n            English: randomItem.English,\n            Chinese: randomItem.Chinese,\n            Gr: randomItem.Gr,\n            sdEn: randomItem.mp3en,\n            sdCh: randomItem.mp3ch\n          }]\n          let j = 1\n          while (j < this.choices) {\n            if (this.sound === 'sdTy') {\n              choices.push({\n                English: this.typoFix(randomItem.English),\n                Gr: randomItem.Gr,\n                sdEn: randomItem.mp3en,\n                sdCh: randomItem.mp3ch,\n                Chinese: randomItem.Chinese\n              })\n              j++\n            } else {\n              let randomChoice = this.amendedList[Math.floor(Math.random() * this.amendedList.length)]\n\n              if (!choices.includes(randomChoice)) {\n                choices.push({\n                  English: randomChoice.English,\n                  Chinese: randomChoice.Chinese,\n                  Gr: randomChoice.Gr,\n                  sdEn: randomChoice.mp3en,\n                  sdCh: randomChoice.mp3ch\n                })\n                j++\n              }\n            }\n          }\n          let shuffChoices = this.shuffle(choices)\n          this.testItemsRoot.push({\n            English: randomItem.English,\n            Chinese: randomItem.Chinese,\n            Choices: shuffChoices,\n            Gr: randomItem.Gr,\n            sdEn: randomItem.mp3en,\n            sdCh: randomItem.mp3ch\n          })\n          i++\n        }\n      }\n\n      this.toolbarSettings = {\n        type: this.testType,\n        sound: this.sound,\n        label: this.label,\n        sort: this.sort,\n        words: this.words,\n        choices: this.choices,\n        selected: this.selected\n      }\n\n      // console.log(this.testItemsRoot)\n\n      this.$emit('newTest', {\n        test: this.testItemsRoot,\n        settings: JSON.stringify(this.toolbarSettings)\n      })\n\n      if (this.words < 6) {\n        this.words = parseInt(this.wordsReset)\n      }\n    },\n    makeSpelling: function () {\n      let i = 0\n      while (i < this.words) {\n        var randomItem = this.amendedList[Math.floor(Math.random() * this.amendedList.length)]\n        // console.log(this.testItems, randomItem)\n        if (!this.checkDuplicate(randomItem)) {\n          console.log('pass', randomItem)\n        } else {\n          // CHANGE MADE new code for spelling set up\n          let spell = '              '\n          if (this.spelling) {\n            spell = wordFix(randomItem.English, this.spelling)\n          }\n\n          console.log('SPELL', spell)\n          this.testItemsRoot.push({\n            English: randomItem.English,\n            Chinese: randomItem.Chinese,\n            Spelling: spell,\n            Gr: randomItem.Gr,\n            sdEn: randomItem.mp3en,\n            sdCh: randomItem.mp3ch\n          })\n          i++\n        }\n      }\n\n      this.toolbarSettings = {\n        type: this.testType,\n        sound: this.sound,\n        label: this.label,\n        words: this.words,\n        choices: this.choices,\n        spelling: this.spelling,\n        display: this.display,\n        feedback: this.feedback\n      }\n\n      this.$emit('newTest', {\n        test: this.testItemsRoot,\n        settings: JSON.stringify(this.toolbarSettings)\n      })\n\n      if (this.words < 6) {\n        this.words = parseInt(this.wordsReset)\n      }\n    },\n    typoFix: function (english) {\n      // console.log('typos', english)\n      let words = english.split(' ')\n      let newString = ''\n      for (let index in words) {\n        newString += getTypos(words[index])\n        newString += ' '\n      }\n      return newString\n    },\n    retryTest: function () {\n      this.$emit('retry', null)\n    },\n    alphabet: function () {\n      let alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n      for (let letter in alphabet) {\n        this.optionsA.push({ value: alphabet[letter], text: alphabet[letter] })\n      }\n    },\n    checkDuplicate: function (rand) {\n      for (let testEntry in this.testItems) {\n        //  console.log(this.testItems[testEntry].English, rand.English)\n        if (this.testItems[testEntry].English === rand.English) {\n          console.log('found', rand)\n          return false\n        }\n      }\n      return true\n    },\n    shuffle: function (array) {\n      // Fisher-Yates shuffle\n      for (let i = array.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1)); // random index from 0 to i\n        [array[i], array[j]] = [array[j], array[i]]\n      }\n      return array\n    },\n    goTo: function (arg) {\n      this.$router.push(arg)\n    }\n  },\n  watch: {\n    words: function () {\n      if (this.words === 0) {\n        alert('There are no words that meet your selection')\n        this.words = parseInt(this.wordsReset)\n      }\n    }\n  },\n  created () {\n    this.alphabet()\n    this.tableItems = this.$store.getters.makeList\n    this.stringItems = JSON.stringify(this.tableItems)\n\n    if (this.testType === 'TransCh') {\n      this.sortOptions.pop()\n      this.soundOptions = [\n        { text: 'exam mode', value: 'sdEx' },\n        { text: 'typos mode', value: 'sdTy' },\n        { text: 'off', value: 'sdOff' }\n      ]\n    }\n\n    if (this.testType === 'TypeTest') {\n      this.sound = 'sdEn'\n      this.soundOptions = [\n        { text: 'auto Eng', value: 'sdEn' },\n        { text: 'auto Ch', value: 'sdCh' },\n        { text: 'off', value: 'sdOff' }\n      ]\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n.btn-custom {\n  background-color: green;\n}\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Toolbar.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (!_vm.toolbarShow)?_c('div',{staticClass:\"toolbar\"},[_c('div',[_c('b-card',[_c('b-row',[_c('b-col',{attrs:{\"cols\":\"8\"}},[_c('label',{attrs:{\"for\":\"range-words\"}},[_vm._v(\"Quiz Words: \"+_vm._s(_vm.words)+\" \")]),_vm._v(\" \"),_c('b-form-input',{attrs:{\"id\":\"range-words\",\"type\":\"range\",\"min\":\"6\",\"max\":\"30\",\"step\":\"2\",\"variant\":\"warning\"},model:{value:(_vm.words),callback:function ($$v) {_vm.words=$$v},expression:\"words\"}})],1)],1),_vm._v(\" \"),(_vm.testType === 'TransEng' || _vm.testType === 'TransCh')?_c('b-row',{staticClass:\"mt-2\"},[_c('b-col',[_c('label',{attrs:{\"for\":\"range-chocies\"}},[_vm._v(\"Answers Choices: \")]),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('b-form-spinbutton',{attrs:{\"inline\":\"\",\"id\":\"range-chocies\",\"type\":\"range\",\"min\":\"2\",\"max\":\"6\"},model:{value:(_vm.choices),callback:function ($$v) {_vm.choices=$$v},expression:\"choices\"}})],1)],1):_vm._e(),_vm._v(\" \"),(_vm.testType === 'TypeTest')?_c('b-row',{staticClass:\"mt-2\"},[_c('b-col',[_vm._v(\"\\n          Spelling Options\\n        \"),_c('b-form-select',{attrs:{\"options\":_vm.optionsO},model:{value:(_vm.spelling),callback:function ($$v) {_vm.spelling=$$v},expression:\"spelling\"}})],1),_vm._v(\" \"),_c('b-col',[_vm._v(\"\\n          Sort Options\\n        \"),_c('b-form-select',{attrs:{\"options\":_vm.optionsS},model:{value:(_vm.special),callback:function ($$v) {_vm.special=$$v},expression:\"special\"}})],1)],1):_vm._e(),_vm._v(\" \"),_c('b-row',[(_vm.testType === 'TypeTest')?_c('b-col',{staticClass:\"my-2\",attrs:{\"md\":\"4\"}},[_vm._v(\"\\n          Display Options\\n          \"),_c('div',[_c('b-form-radio-group',{attrs:{\"options\":_vm.displayOptions,\"buttons\":\"\",\"button-variant\":\"outline-primary\",\"size\":\"sm\"},model:{value:(_vm.display),callback:function ($$v) {_vm.display=$$v},expression:\"display\"}})],1)]):_vm._e(),_vm._v(\" \"),(_vm.testType === 'TypeTest')?_c('b-col',{staticClass:\"my-2\",attrs:{\"md\":\"4\"}},[_vm._v(\"\\n          Feedback Options\\n          \"),_c('div',[_c('b-form-radio-group',{attrs:{\"options\":_vm.feedbackOptions,\"buttons\":\"\",\"button-variant\":\"outline-primary\",\"size\":\"sm\"},model:{value:(_vm.feedback),callback:function ($$v) {_vm.feedback=$$v},expression:\"feedback\"}})],1)]):_vm._e(),_vm._v(\" \"),_c('b-col',{staticClass:\"mt-4\",attrs:{\"lg\":\"4\"}},[_vm._v(\"\\n          Sound Options\\n          \"),_c('div',[_c('b-form-radio-group',{attrs:{\"options\":_vm.soundOptions,\"buttons\":\"\",\"button-variant\":\"custom\",\"size\":\"sm\"},model:{value:(_vm.sound),callback:function ($$v) {_vm.sound=$$v},expression:\"sound\"}})],1)])],1),_vm._v(\" \"),(_vm.testType === 'TransEng' || _vm.testType === 'TransCh')?_c('b-row',[_c('b-col',[_c('br'),_vm._v(\"\\n          Grammar Labels\\n          \"),_c('div',[_c('b-form-radio-group',{attrs:{\"options\":_vm.labelOptions,\"buttons\":\"\",\"button-variant\":\"outline-primary\",\"size\":\"sm\"},model:{value:(_vm.label),callback:function ($$v) {_vm.label=$$v},expression:\"label\"}})],1)])],1):_vm._e(),_vm._v(\" \"),(_vm.testType === 'TransEng' || _vm.testType === 'TransCh')?_c('b-row',[_c('b-col',[_c('br'),_vm._v(\"\\n          Sort Options\\n          \"),_c('div',[_c('b-form-radio-group',{attrs:{\"options\":_vm.sortOptions,\"buttons\":\"\",\"button-variant\":\"outline-primary\",\"size\":\"sm\"},model:{value:(_vm.sort),callback:function ($$v) {_vm.sort=$$v},expression:\"sort\"}})],1)])],1):_vm._e(),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('b-row',[(_vm.sort=='srtLet')?_c('b-col',[_c('b-form-select',{attrs:{\"options\":_vm.optionsA,\"select-size\":4},model:{value:(_vm.selected),callback:function ($$v) {_vm.selected=$$v},expression:\"selected\"}}),_vm._v(\" \"),_c('div',{staticClass:\"mt-3\"},[_vm._v(\"Selected: \"),_c('strong',[_vm._v(_vm._s(_vm.selected))])])],1):_vm._e(),_vm._v(\" \"),(_vm.sort=='srtGram')?_c('b-col',[_c('b-form-select',{attrs:{\"options\":_vm.optionsG},model:{value:(_vm.selected),callback:function ($$v) {_vm.selected=$$v},expression:\"selected\"}}),_vm._v(\" \"),_c('div',{staticClass:\"mt-3\"},[_vm._v(\"Selected: \"),_c('strong',[_vm._v(_vm._s(_vm.selected))])])],1):_vm._e(),_vm._v(\" \"),(_vm.sort=='srtDiff')?_c('b-col',[_c('b-form-select',{attrs:{\"options\":_vm.optionsR},model:{value:(_vm.selected),callback:function ($$v) {_vm.selected=$$v},expression:\"selected\"}}),_vm._v(\" \"),_c('div',{staticClass:\"mt-3\"},[_vm._v(\"Selected: \"),_c('strong',[_vm._v(_vm._s(_vm.selected))])])],1):_vm._e()],1)],1),_vm._v(\" \"),_c('b-card',{staticClass:\"mt-2\"},[_c('b-row',[_c('b-col',[_c('b-button',{staticClass:\"md-3\",attrs:{\"variant\":\"outline-primary\",\"block\":\"\"},on:{\"click\":function($event){return _vm.makeTest()}}},[_vm._v(\"Start\")])],1),_vm._v(\" \"),_c('b-col',[(_vm.showAnswers)?_c('b-button',{staticClass:\"md-3\",attrs:{\"variant\":\"outline-success\",\"block\":\"\"},on:{\"click\":function($event){return _vm.retryTest()}}},[_vm._v(\"Retry\")]):_vm._e()],1)],1)],1)],1)]):_vm._e()}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-0f033c02\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Toolbar.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-0f033c02\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Toolbar.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Toolbar.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Toolbar.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-0f033c02\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Toolbar.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-0f033c02\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Toolbar.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}